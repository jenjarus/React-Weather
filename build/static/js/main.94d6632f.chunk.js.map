{"version":3,"sources":["Components/WeatherInput.js","actions.js","Components/WearherItem.js","Components/WearherInfo.js","App.js","reducer.js","index.js"],"names":["mapDipatchToProps","setIdCity","data","type","idCity","setCityName","city","setErrorCity","errorCity","connect","useState","setCity","showSearch","setShowSearch","searchList","setSearchList","api","a","url","fetch","api_url","json","apiSubmit","woeid","title","console","log","search_result","map","el","i","onClick","id","select_result","className","onSubmit","e","preventDefault","placeholder","value","onChange","target","onFocus","onBlur","setTimeout","flag","length","searchBox","WEATHER_STATE","DAY","state","dataToday","classBox","url_img","weather_state_abbr","the_temp","Number","toFixed","min_temp","max_temp","wind_speed","src","alt","weather_state_name","wind_direction_compass","cityName","dataYesterday","dataTomorrow","dataAfterTomorrow","WearherItem","setDataToday","setDataYesterday","setDataTomorrow","setDataAfterTomorrow","loading","setLoading","date","consolidated_weather","year","month","day","Date","getTime","stringData","getFullYear","getMonth","getDate","ms","toString","useEffect","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94d6632f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setIdCity, setCityName, setErrorCity} from \"../actions\";\r\n\r\nconst WeatherInput = ({setIdCity, setCityName, setErrorCity}) => {\r\n    const [city, setCity] = useState(\"Moscow\");\r\n    const [showSearch, setShowSearch] = useState(false);\r\n    const [searchList, setSearchList] = useState([]);\r\n\r\n    const api = async (city) => {\r\n        const url = `/api/location/search/?query=${city}`;\r\n\r\n        const api_url = await fetch(url);\r\n        const data = await api_url.json();\r\n        setSearchList(data);\r\n    };\r\n\r\n    const apiSubmit = async (city) => {\r\n        const url = `/api/location/search/?query=${city}`;\r\n\r\n        try {\r\n            const api_url = await fetch(url);\r\n            const data = await api_url.json();\r\n            setIdCity(data[0].woeid);\r\n            setCityName(data[0].title);\r\n            setErrorCity();\r\n        } catch(err) {\r\n            console.log(err);\r\n            setErrorCity(true);\r\n        }\r\n    };\r\n\r\n    const select_result = (city, id) => {\r\n        setCity(city);\r\n        setCityName(city);\r\n        setIdCity(id);\r\n        setSearchList([]);\r\n    };\r\n\r\n    const search_result = () => {\r\n        return searchList.map((el, i) =>\r\n        <li\r\n        key={i}\r\n        onClick={() => select_result(el.title, el.woeid)}>\r\n            {el.title}\r\n        </li>);\r\n    };\r\n\r\n    const searchBox = (flag) => {\r\n        if(flag && searchList.length) {\r\n            return <div className=\"search_list\">\r\n                <ul>{search_result()}</ul>\r\n            </div>\r\n        }\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        setCity(e.target.value);\r\n        api(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        apiSubmit(city);\r\n        setSearchList([]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"line line_col\">\r\n            <form className=\"form_box\" onSubmit={handleSubmit}>\r\n                <div className=\"line\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Введите город\"\r\n                        value={city}\r\n                        onChange={handleInput}\r\n                        onFocus={() => setShowSearch(true)}\r\n                        onBlur={() => setTimeout(setShowSearch, 500, false)}\r\n                    />\r\n                    <button className=\"btn\">Применить</button>\r\n                </div>\r\n                {searchBox(showSearch)}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDipatchToProps = {\r\n    setIdCity,\r\n    setCityName,\r\n    setErrorCity,\r\n};\r\n\r\nexport default connect(null, mapDipatchToProps)(WeatherInput)\r\n","export function setIdCity(data) {\r\n    return {\r\n        type: 'SET_ID_CITY',\r\n        idCity: data,\r\n    }\r\n}\r\nexport function setCityName(data) {\r\n    return {\r\n        type: 'SET_CITY',\r\n        city: data,\r\n    }\r\n}\r\nexport function setDataToday(data) {\r\n    return {\r\n        type: 'SET_DATA_TODAY',\r\n        dataToday: data,\r\n    }\r\n}\r\nexport function setDataYesterday(data) {\r\n    return {\r\n        type: 'SET_DATA_YESTERDAY',\r\n        dataYesterday: data,\r\n    }\r\n}\r\nexport function setDataTomorrow(data) {\r\n    return {\r\n        type: 'SET_DATA_TOMORROW',\r\n        dataTomorrow: data,\r\n    }\r\n}\r\nexport function setDataAfterTomorrow(data) {\r\n    return {\r\n        type: 'SET_DATA_AFTER_TOMORROW',\r\n        dataAfterTomorrow: data,\r\n    }\r\n}\r\nexport function setErrorCity(data) {\r\n    return {\r\n        type: 'SET_ERROR_CITY',\r\n        errorCity: data,\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst WEATHER_STATE = {\r\n    'Snow': 'Снег',\r\n    'Sleet' : 'Мокрый снег',\r\n    'Hail' : 'Град',\r\n    'Thunderstorm' : 'Гроза',\r\n    'Heavy Rain' : 'Ливень',\r\n    'Light Rain' : 'Легкий дождь',\r\n    'Showers' : 'Дождь',\r\n    'Heavy Cloud' : 'Сильная облачность',\r\n    'Light Cloud' : 'Небольшая облачность',\r\n    'Clear' : 'Ясно'\r\n};\r\n\r\nconst DAY = {\r\n    'today' : 'Сегодня',\r\n    'yesterday': 'Вчера',\r\n    'tomorrow': 'Завтра',\r\n    'afterTomorrow': 'Послезавтра',\r\n};\r\n\r\nconst WeatherItem = ({data, flag}) => {\r\n    let classBox = \"item\";\r\n    classBox += flag === 'today'? ' today' : '';\r\n    const url_img = `/static/img/weather/png/64/${data.weather_state_abbr}.png`;\r\n\r\n    const the_temp = (data.the_temp > 0 ? '+' : '') + Number(data.the_temp).toFixed(0);\r\n    const min_temp = (data.min_temp > 0 ? '+' : '') + Number(data.min_temp).toFixed(0);\r\n    const max_temp = (data.max_temp > 0 ? '+' : '') + Number(data.max_temp).toFixed(0);\r\n    const wind_speed = (data.wind_speed/2.236).toFixed(1); //Конвертируется в м/с\r\n\r\n    return (\r\n        <div className={classBox}>\r\n            <div className=\"weather_time\">{DAY[flag]}</div>\r\n            <div className=\"weather_img\">\r\n                <img src={url_img} alt=\"img_weather\"/>\r\n            </div>\r\n            <div className=\"weather_state\">{WEATHER_STATE[data.weather_state_name]}</div>\r\n            <div className=\"weather_temp\">Температура: <span className=\"temp\">{the_temp}°C</span>\r\n                <div className=\"temp_other\">\r\n                    <span>min: {min_temp}°C</span>\r\n                    <span>max: {max_temp}°C</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"weather_wind\">Ветер: {wind_speed}м/с {data.wind_direction_compass}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dataToday: state.dataToday,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeatherItem)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport WearherItem from \"./WearherItem\";\r\n\r\nconst WeatherInfo = ({cityName, dataYesterday, dataToday, dataTomorrow, dataAfterTomorrow}) => {\r\n    return (\r\n        <div className=\"info_box\">\r\n            <div className=\"title_city\">{cityName}</div>\r\n            <div className=\"items\">\r\n                <WearherItem data={dataYesterday} flag=\"yesterday\" />\r\n                <WearherItem data={dataToday} flag=\"today\" />\r\n                <WearherItem data={dataTomorrow} flag=\"tomorrow\" />\r\n                <WearherItem data={dataAfterTomorrow} flag=\"afterTomorrow\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cityName: state.cityName,\r\n        dataYesterday: state.dataYesterday,\r\n        dataToday: state.dataToday,\r\n        dataTomorrow: state.dataTomorrow,\r\n        dataAfterTomorrow: state.dataAfterTomorrow,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeatherInfo)\r\n","import React, {useEffect, useState} from 'react';\nimport './styles/reset.css'\nimport './styles/base.scss'\nimport WeatherInput from \"./Components/WeatherInput\";\nimport WeatherInfo from \"./Components/WearherInfo\"\nimport {connect} from \"react-redux\";\nimport {setDataToday, setDataYesterday, setDataTomorrow, setDataAfterTomorrow} from './actions'\n\nconst App = ({idCity, errorCity, setDataToday, setDataYesterday, setDataTomorrow, setDataAfterTomorrow}) => {\n\n  const [loading, setLoading] = useState(false);\n\n  const api = async (idCity, date='', flag) => {\n    const url = `/api/location/${idCity}${date}/`;\n\n    const api_url = await fetch(url);\n    const data = await api_url.json();\n\n    switch(flag) {\n      case 'today':\n        setDataToday(data.consolidated_weather[0]);\n        break;\n      case 'yesterday':\n        setDataYesterday(data[0]);\n        break;\n      case 'tomorrow':\n        setDataTomorrow(data[0]);\n        break;\n      case 'afterTomorrow':\n        setDataAfterTomorrow(data[0]);\n        break;\n      default:\n        console.log('Упс...');\n        break;\n    }\n    setLoading(true);\n  };\n\n  const date = (flag) => {\n    let date = new Date().getTime();\n    let year, month, day;\n\n    switch(flag) {\n      case 'yesterday':\n        date = stringData(date - 86400000);\n        year = date.getFullYear();\n        month = date.getMonth();\n        day = date.getDate();\n        break;\n      case 'tomorrow':\n        date = stringData(date + 86400000);\n        year = date.getFullYear();\n        month = date.getMonth();\n        day = date.getDate();\n        break;\n      case 'afterTomorrow':\n        date = stringData(date + 172800000);\n        year = date.getFullYear();\n        month = date.getMonth();\n        day = date.getDate();\n        break;\n      default:\n        console.log('Упс...');\n        break;\n    }\n    return `/${year}/${month+1}/${day}`;\n  };\n\n  // Меняет миллисекунды на объект даты\n  const stringData = (ms) => {\n    let date = new Date(ms);\n    date = new Date(date.toString());\n    return date;\n  };\n\n  const abc = () => {\n    if(loading) {\n      if(errorCity) {\n        return <>\n          <div className=\"info_box\">\n            <div className=\"error_msg\">Город не найден</div>\n          </div>\n        </>\n      } else {\n        return <>\n          <WeatherInfo />\n        </>\n      }\n    } else {\n      return <div>Загрузка...</div>\n    }\n  };\n\n  useEffect(() => {\n    api(idCity, '', 'today');\n    api(idCity, date('yesterday'), 'yesterday');\n    api(idCity, date('tomorrow'), 'tomorrow');\n    api(idCity, date('afterTomorrow'), 'afterTomorrow');\n  }, [idCity]);\n\n  return (\n      <>\n        <header>\n          <div className=\"container\">\n            <div className=\"header\">\n              <div className=\"title\">Прогноз <span className=\"red\">погоды</span></div>\n            </div>\n          </div>\n        </header>\n        <main>\n          <article className=\"container\">\n            <WeatherInput />\n            {abc()}\n          </article>\n        </main>\n        <footer>\n          <div className=\"container\">\n            <div className=\"footer\">\n              <div className=\"copy\">©Jenjarus <span className=\"year\">2077</span></div>\n            </div>\n          </div>\n        </footer>\n      </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    idCity: state.idCity,\n    errorCity: state.errorCity,\n  }\n}\n\nconst mapDipatchToProps = {\n  setDataToday,\n  setDataYesterday,\n  setDataTomorrow,\n  setDataAfterTomorrow,\n};\n\nexport default connect(mapStateToProps, mapDipatchToProps)(App)\n","const initialState = {\r\n    idCity: 2122265,\r\n    cityName: \"Moscow\",\r\n    dataToday: {},\r\n    dataYesterday: {},\r\n    dataTomorrow: {},\r\n    dataAfterTomorrow: {},\r\n    errorCity: false,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'SET_ID_CITY':\r\n            return {\r\n                ...state,\r\n                idCity: action.idCity,\r\n            };\r\n        case 'SET_CITY':\r\n            return {\r\n                ...state,\r\n                cityName: action.city,\r\n            };\r\n        case 'SET_DATA_TODAY':\r\n            return {\r\n                ...state,\r\n                dataToday: action.dataToday,\r\n            };\r\n        case 'SET_DATA_YESTERDAY':\r\n            return {\r\n                ...state,\r\n                dataYesterday: action.dataYesterday,\r\n            };\r\n        case 'SET_DATA_TOMORROW':\r\n            return {\r\n                ...state,\r\n                dataTomorrow: action.dataTomorrow,\r\n            };\r\n        case 'SET_DATA_AFTER_TOMORROW':\r\n            return {\r\n                ...state,\r\n                dataAfterTomorrow: action.dataAfterTomorrow,\r\n            };\r\n        case 'SET_ERROR_CITY':\r\n            return {\r\n                ...state,\r\n                errorCity: action.errorCity,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducer'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}